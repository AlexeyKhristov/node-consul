#!/usr/bin/env bash

tmp="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )/tmp"

setup() {
  version='0.3.0'
  os="$( uname -s | tr '[:upper:]' '[:lower:]' )"
  arch='amd64'

  mkdir -p "$tmp"

  if [[ ! -e "${tmp}/consul" ]]; then
    echo
    echo "Downloading consul into $tmp"
    echo

    rm -fr "${tmp}/consul-ui"

    bin_name="${version}_${os}_${arch}.zip"
    ui_name="${version}_web_ui.zip"

    pushd "$tmp" &>/dev/null

    echo "Getting $bin_name"
    curl -LO "https://dl.bintray.com/mitchellh/consul/${bin_name}"
    unzip "$bin_name"

    echo "Getting $ui_name"
    curl -LO "https://dl.bintray.com/mitchellh/consul/${ui_name}"
    unzip "$ui_name"

    echo

    rm -f "$bin_name" "$ui_name"

    popd &>/dev/null
  fi
}

start_server() {
  id="$1"; shift
  data="${tmp}/data/${id}"

  rm -fr "$data"
  mkdir -p "$data"

  "${tmp}/consul" agent \
    -data-dir="$data" \
    -node="node${id}" \
    -dc=dc1 \
    -bind="127.0.0.${id}" \
    -client="127.0.0.${id}" \
    -pid-file="${tmp}/consul_${id}.pid" \
    -ui-dir="${tmp}/dist" \
    $@ \
    &> "${tmp}/consul_${id}.log" &
}

start() {
  setup; stop &>/dev/null

  for id in {1..3}; do
    echo "Starting server id $id"

    if [[ $id == 1 ]]; then
      start_server $id -bootstrap -server
    else
      start_server $id
    fi
  done

  sleep ${CLUSTER_START_SLEEP:-0.1}

  for id in {1..3}; do
    path="${tmp}/consul_${id}.pid"

    if [[ ! -f "$path" ]] || ! kill -0 $( cat $path ) &>/dev/null; then
      echo "Failed to start server id $id" ; stop ; break
    fi
  done
}

stop() {
  for id in {1..3}; do
    if [[ -f "${tmp}/consul_${id}.pid" ]]; then
      pid="$( cat "${tmp}/consul_${id}.pid" )"
      echo "Killing server id $id pid $pid"
      kill -9 "$pid"
    fi

    rm -rf "${tmp}/consul_${id}."* "${tmp}/data/${id}"
  done
}

case $1 in
  start) shift; start "$@" ;;
  stop) shift; stop "$@" ;;
  *) echo "Unknown command: $1" ;;
esac
